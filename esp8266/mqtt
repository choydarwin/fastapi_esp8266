#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// Replace with your network credentials
const char* ssid = "TP-Link_77E8";
const char* password = "84119513";

// Replace with your MQTT broker details
const char* mqttServer = "192.168.0.103";  //192.168.0.104,172.21.55.199
const int mqttPort = 1883;
//const char* mqttUsername = "marmota";
//const char* mqttPassword = "marmota";

WiFiClient espClient;
PubSubClient client(espClient);

unsigned long previousMillis = 0;
const long interval = 3000; // Send data every 3 seconds

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  
  Serial.println("Connected to WiFi");
  
  client.setServer(mqttServer, mqttPort);
  
  while (!client.connected()) {
    Serial.println("Connecting to MQTT broker...");
    
    if (client.connect("ESP8266Client")) {
      Serial.println("Connected to MQTT broker");
    }
    else {
      Serial.print("Failed to connect to MQTT broker, rc=");
      Serial.println(client.state());
      Serial.println("Retrying in 5 seconds...");
      delay(5000);
    }
  }
}

void loop() {
  unsigned long currentMillis = millis();
  
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    
    int randomValue = random(20, 31); // Generate random number between 20 and 30
    
    char message[10];
    snprintf(message, sizeof(message), "%d", randomValue);
    
    client.publish("random_number", message);
    
    Serial.print("Published: ");
    Serial.println(message);
  }
  
  if (!client.connected()) {
    Serial.println("Connection lost. Reconnecting...");
    
    if (client.connect("ESP8266Client")) {
      Serial.println("Reconnected to MQTT broker");
    }
    else {
      Serial.print("Failed to reconnect to MQTT broker, rc=");
      Serial.println(client.state());
      Serial.println("Retrying in 5 seconds...");
      delay(5000);
    }
  }
  
  client.loop();
}